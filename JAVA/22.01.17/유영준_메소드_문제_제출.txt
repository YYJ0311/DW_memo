1. 메소드를 활용해서 짝수 출력
 ( 1 ~ 10 )
조건. 인자값 하고 리턴값이 없음.
public static void 짝수판단(){
	...코드작성...
}

	public static void 짝수판단() {
		for(int i=1; i<=10; ++i) {
			if((i%2)==0) {
				System.out.println(i+" 는 짝수");
			}
		}
	}
	public static void main(String[] args) {
		짝수판단();
	}

2.메소드를 활용해서 최대값 구하기.
조건. 인덱스 값이 50이 넘으면 최대값 비교를 하지 않습니다.
조건. 배열길이가 5를 넘으면 return 0을 합니다. 
public static int 최대값구하기(int array[]){
	int max = 0;
	...코드 작성...
	return max;
}

	public static int 최대값구하기(int array[]) {
		int max = 0;
		for (int i = 0; i < array.length; i++) {
			if (array.length > 5) {
				return 0;
			}
			if (array[i] > max && array[i] <= 50) {
				max = array[i];
			}
		}
		System.out.println(max);
		return max;
	}

	public static void main(String[] args) {
		int array[] = { 10, 11, 50, 4};
		최대값구하기(array);
	}

선생님이 고쳐준 것

	public static int 최대값구하기(int array[]) {
		if (array.length > 5) return 0; // 조건 실행이 한 줄이면 옆에 붙여서 써도 된다.
		int max = 0;
		for (int i = 0; i < array.length; i++) {
			if (array[i] > max && array[i] <= 50) {
				max = array[i];
			}
		}
		return max;
	}

	public static void main(String[] args) {
		int array[] = { 10, 11, 50, 5}; //예시
		System.out.println(최대값구하기(array));
	}

3. 메소드를 활용해서 거스름돈 풀기.
조건. 파라미터값에 만원을 입력하면 만원 몇장
 	오천원을 입력하면 오천원 몇장을 출력.
public static int 돈구하기(String money,int totalMoney){
	int MAN = 10000;
	int OCHEON = 5000;
	if(money.equals("만원")) ... 코드 작성 ...
	if(money.equals("오천원")) ... 코드 작성 ...
}

	public static int 돈구하기(String money, int totalMoney) {
		int MAN = 10000;
		int OCHEON = 5000;
		int result = 0;
		if(money.equals("만원")) {
			result = totalMoney / MAN;
		}
		if(money.equals("오천원")) {
			result = totalMoney / OCHEON;
		}
		return result;
	}
	
	public static void main(String[] args) {
		int totalMoney = 15000;
		int 몇장1 = 돈구하기("만원", totalMoney);
		int 몇장2 = 돈구하기("오천원", totalMoney);
		System.out.println("만원은 "+몇장1 +" 장");
		System.out.println("오천원은 "+몇장2 +" 장");
	}